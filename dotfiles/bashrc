# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# Define colors
_BLUE='\[\e[1;34m\]'
_GREEN='\[\e[1;32m\]'
_WHITE='\[\e[1;0m\]'
_RED='\[\e[1;31m\]'
_BLACK='\[\e[1;30m\]'
_YLWBGD='\[\e[2;43m\]'
_REDBGD='\[\e[1;41m\]'
_BLKBGD='\[\e[40m\]'

if [ -n "$SSH_CLIENT" ]; then
    if [ -n "$REMOTE_ALIAS" ]; then
	_REMOTE_ALIAS=$REMOTE_ALIAS
    	_CLIENT="$_YLWBGD""$_BLACK""$_REMOTE_ALIAS""$_BLKBGD"
    else
	HN=$(hostname -a | awk '{print $1 }' )
	case $HN in
	    (*"SMHS"*) _REMOTE_ALIAS=GWU-STUDENT-SERVER;;
	    (*) _REMOTE_ALIAS=REMOTE;;
	esac
    	_CLIENT="$_YLWBGD""$_BLACK""$_REMOTE_ALIAS""$_BLKBGD"
    fi
else
    _CLIENT="$_GREEN"'(LOCAL)'"$_WHITE"
fi

if [ "$color_prompt" = yes ]; then
    PS1="$_GREEN\u@$_CLIENT$_WHITE:$_BLUE\w$_WHITE"
fi
unset color_prompt force_color_prompt

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/dotfiles/bash_aliases ]; then
    . ~/dotfiles/bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -f ~/dotfiles/git-prompt.sh ]; then
  source ~/dotfiles/git-prompt.sh
  PS1=$PS1' $(__git_ps1 "(%s)")'"\n$_WHITE\$ "
  # PROMPT_COMMAND='__git_ps1 "'
else
  # Ensure that the second line is still constructed
  PS1=$PS1"\n$_WHITE\$ "
fi
